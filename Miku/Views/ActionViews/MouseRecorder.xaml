<StackPanel
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:Miku_Client="clr-namespace:Miku.Client" 
    xmlns:dataContent="clr-namespace:Miku.Client.Helpers"
    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" 
    mc:Ignorable="d" x:Class="Miku.Client.Views.ActionViews.MouseRecorder"
         Height="321" Width="618" Background="Transparent">
    
	<StackPanel.Resources>
        <dataContent:ResourceWrapper x:Key="DataContents"></dataContent:ResourceWrapper>
		<Storyboard x:Key="RecordedListIn">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="RecordedList">
				<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
				<EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
			<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="RecordedList">
				<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
				<DiscreteObjectKeyFrame KeyTime="0:0:1" Value="{x:Static Visibility.Visible}"/>
			</ObjectAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="RecordedList">
				<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
				<EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="btnrightExpand">
				<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
				<EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="btnleftExpand">
				<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
				<EasingDoubleKeyFrame KeyTime="0:0:1" Value="0"/>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Introduction">
				<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
				<EasingDoubleKeyFrame KeyTime="0:0:1" Value="0"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="RecordedListOut">
			<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="RecordedList">
				<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
				<DiscreteObjectKeyFrame KeyTime="0:0:1" Value="{x:Static Visibility.Visible}"/>
			</ObjectAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="RecordedList">
				<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
				<EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="RecordedList">
				<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
				<EasingDoubleKeyFrame KeyTime="0:0:1" Value="0"/>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="btnleftExpand">
				<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
				<EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="btnrightExpand">
				<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
				<EasingDoubleKeyFrame KeyTime="0:0:1" Value="0"/>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Introduction">
				<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
				<EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="RecordContentIn">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="recordContent">
				<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="RecordContentOut">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="recordContent">
				<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="PlaybackContentIn">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="playbackContent">
				<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="PlaybackContentOut">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="playbackContent">
				<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="LoadfileContentIn">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="loadfileContent">
				<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="LoadfileContentOut">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="loadfileContent">
				<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="SavefileContentIn">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="savefileContent">
				<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="SavefileContentOut">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="savefileContent">
				<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		
		<Style x:Key="ButtonFocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#F3F3F3" Offset="0"/>
			<GradientStop Color="#EBEBEB" Offset="0.5"/>
			<GradientStop Color="#DDDDDD" Offset="0.5"/>
			<GradientStop Color="#CDCDCD" Offset="1"/>
		</LinearGradientBrush>
		<SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
		<Style x:Key="RecordButtonStyle" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
			<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Foreground" Value="White"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Microsoft_Windows_Themes:ButtonChrome x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" RenderDefaulted="{TemplateBinding IsDefaulted}" SnapsToDevicePixels="true" RenderTransformOrigin="0.5,0.5">
							<Microsoft_Windows_Themes:ButtonChrome.RenderTransform>
								<TransformGroup>
									<ScaleTransform/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform/>
								</TransformGroup>
							</Microsoft_Windows_Themes:ButtonChrome.RenderTransform>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver"/>
									<VisualState x:Name="Pressed">
										<Storyboard>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Chrome">
												<EasingDoubleKeyFrame KeyTime="0" Value="1.2"/>
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="Chrome">
												<EasingDoubleKeyFrame KeyTime="0" Value="1.2"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Microsoft_Windows_Themes:ButtonChrome>
						<ControlTemplate.Triggers>
							<Trigger Property="IsKeyboardFocused" Value="true">
								<Setter Property="RenderDefaulted" TargetName="Chrome" Value="true"/>
							</Trigger>
							<Trigger Property="ToggleButton.IsChecked" Value="true">
								<Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="#ADADAD"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</StackPanel.Resources>
	<StackPanel.Triggers>
		<EventTrigger RoutedEvent="FrameworkElement.Loaded">
			<!--<BeginStoryboard Storyboard="{StaticResource RecordedListIn}"/>-->
			<BeginStoryboard Storyboard="{StaticResource RecordedListOut}"/>
			<BeginStoryboard Storyboard="{StaticResource RecordContentIn}"/>
			<BeginStoryboard Storyboard="{StaticResource RecordContentOut}"/>
			<BeginStoryboard Storyboard="{StaticResource PlaybackContentIn}"/>
			<BeginStoryboard Storyboard="{StaticResource PlaybackContentOut}"/>
			<BeginStoryboard Storyboard="{StaticResource LoadfileContentIn}"/>
			<BeginStoryboard Storyboard="{StaticResource LoadfileContentOut}"/>
			<BeginStoryboard Storyboard="{StaticResource SavefileContentIn}"/>
			<BeginStoryboard Storyboard="{StaticResource SavefileContentOut}"/>
			<!--<BeginStoryboard Storyboard="{StaticResource FilesListIn}"/>
			<BeginStoryboard Storyboard="{StaticResource FilesListOut}"/>-->
		</EventTrigger>
	</StackPanel.Triggers>
	<Grid Height="321" Width="618">
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="378*" />
			<ColumnDefinition Width="240*" />
		</Grid.ColumnDefinitions>
		<Grid Grid.Column="1">
			<Grid.RowDefinitions>
				<RowDefinition Height="270*" />
				<RowDefinition Height="51*" />
			</Grid.RowDefinitions>
			<Button x:Name="btnleftExpand" Grid.Row="1"  HorizontalAlignment="Center" VerticalAlignment="Center" Style="{DynamicResource leftStyle}" RenderTransformOrigin="0.5,0.5" >
				<Button.RenderTransform>
					<TransformGroup>
						<ScaleTransform/>
						<SkewTransform/>
						<RotateTransform/>
						<TranslateTransform/>
					</TransformGroup>
				</Button.RenderTransform>
				<i:Interaction.Triggers>
					<i:EventTrigger EventName="Click">
						<ei:ControlStoryboardAction Storyboard="{StaticResource RecordedListIn}"/>
					</i:EventTrigger>
				</i:Interaction.Triggers>
			</Button>
			<Button x:Name="btnrightExpand" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center" Style="{DynamicResource rightStyle}" RenderTransformOrigin="0.625,-1.073" >
				<i:Interaction.Triggers>
					<i:EventTrigger EventName="Click">
						<ei:ControlStoryboardAction Storyboard="{StaticResource RecordedListOut}"/>
					</i:EventTrigger>
				</i:Interaction.Triggers>
				<Button.RenderTransform>
					<TransformGroup>
						<ScaleTransform/>
						<SkewTransform/>
						<RotateTransform/>
						<TranslateTransform/>
					</TransformGroup>
				</Button.RenderTransform>
			</Button>
            <GroupBox  Header="{Binding Source={StaticResource DataContents}, Path=ApplicationStrings.IntroductionHeader}"  HorizontalAlignment="Stretch"  x:Name="Introduction" VerticalAlignment="Stretch"  FontSize="20" FontFamily="迷你简小标宋" Style="{DynamicResource Expand}" RenderTransformOrigin="0.5,0.5">
            	<GroupBox.RenderTransform>
            		<TransformGroup>
            			<ScaleTransform/>
            			<SkewTransform/>
            			<RotateTransform/>
            			<TranslateTransform/>
            		</TransformGroup>
            	</GroupBox.RenderTransform>				
				<GroupBox.Foreground>
					<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
						<GradientStop Color="OrangeRed" Offset="0" />
						<GradientStop Color="White" Offset="1" />
					</LinearGradientBrush>
				</GroupBox.Foreground>
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="0.172*"/>
						<RowDefinition Height="0.022*"/>
						<RowDefinition Height="0.806*"/>
					</Grid.RowDefinitions>
					<TextBlock Text="{Binding Source={StaticResource DataContents}, Path=ApplicationStrings.IntroductionText}" Padding="10" TextAlignment="Center"/>
					<TextBox Grid.Row="2" IsReadOnly="True" Text="{Binding Source={StaticResource DataContents}, Path=ApplicationStrings.IntroductionContent, Mode=OneTime}" TextWrapping="WrapWithOverflow"/>
				</Grid>			
			</GroupBox>	
			<GroupBox  Header="{Binding Source={StaticResource DataContents}, Path=ApplicationStrings.RecordedListHeader}"  HorizontalAlignment="Stretch"  x:Name="RecordedList" VerticalAlignment="Stretch"  FontSize="20" FontFamily="迷你简小标宋" Style="{DynamicResource Expand}" RenderTransformOrigin="0.5,0.5">
				<GroupBox.RenderTransform>
					<TransformGroup>
						<ScaleTransform/>
						<SkewTransform/>
						<RotateTransform/>
						<TranslateTransform/>
					</TransformGroup>
				</GroupBox.RenderTransform>
				<GroupBox.Foreground>
					<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
						<GradientStop Color="OrangeRed" Offset="0" />
						<GradientStop Color="White" Offset="1" />
					</LinearGradientBrush>
				</GroupBox.Foreground>
				<ListBox x:Name="lbxRecordList" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />
			</GroupBox>
		</Grid>		
		<Button x:Name="RecordButton" Content="{Binding Source={StaticResource DataContents}, Path=ApplicationStrings.RecordButtonContent}" HorizontalAlignment="Left" Height="53" Margin="20,83,0,0" VerticalAlignment="Top" Width="70" BorderBrush="{x:Null}" Style="{DynamicResource RecordButtonStyle}" FontFamily="迷你简小标宋" Click="RecordButton_Click">
			<Button.Background>
				<ImageBrush ImageSource="/Miku.Client;component/Dictionarys/Images/Box_Blue.png"/>
			</Button.Background>
			<i:Interaction.Triggers>
				<i:EventTrigger EventName="MouseLeave">
					<ei:ControlStoryboardAction Storyboard="{StaticResource RecordContentOut}"/>
				</i:EventTrigger>
				<i:EventTrigger EventName="MouseEnter">
					<ei:ControlStoryboardAction Storyboard="{StaticResource RecordContentIn}"/>
				</i:EventTrigger>
			</i:Interaction.Triggers>
		</Button>
        <Button x:Name="PlaybackButton" Content="{Binding Source={StaticResource DataContents}, Path=ApplicationStrings.PlaybackButtonContent}" HorizontalAlignment="Left" Height="53" Margin="110.5,83,0,0" VerticalAlignment="Top" Width="70" BorderBrush="{x:Null}" Style="{DynamicResource RecordButtonStyle}" FontFamily="迷你简小标宋" Click="PlaybackButton_Click">
			<Button.Background>
				<ImageBrush ImageSource="/Miku.Client;component/Dictionarys/Images/Box_Green.png"/>
			</Button.Background>
			<i:Interaction.Triggers>
				<i:EventTrigger EventName="MouseLeave">
					<ei:ControlStoryboardAction Storyboard="{StaticResource PlaybackContentOut}"/>
				</i:EventTrigger>
				<i:EventTrigger EventName="MouseEnter">
					<ei:ControlStoryboardAction Storyboard="{StaticResource PlaybackContentIn}"/>
				</i:EventTrigger>
			</i:Interaction.Triggers>
		</Button>
        <Button x:Name="LoadfileButton" Content="{Binding Source={StaticResource DataContents}, Path=ApplicationStrings.LoadfileButtonContent}" HorizontalAlignment="Right" Height="53" Margin="0,83,107,0" VerticalAlignment="Top" Width="70" BorderBrush="{x:Null}" Style="{DynamicResource RecordButtonStyle}" FontFamily="迷你简小标宋" Click="LoadfileButton_Click">
			<Button.Background>
				<ImageBrush ImageSource="/Miku.Client;component/Dictionarys/Images/Box_Orange.png"/>
			</Button.Background>
			<i:Interaction.Triggers>
				<i:EventTrigger EventName="MouseLeave">
					<ei:ControlStoryboardAction Storyboard="{StaticResource LoadfileContentOut}"/>
				</i:EventTrigger>
				<i:EventTrigger EventName="MouseEnter">
					<ei:ControlStoryboardAction Storyboard="{StaticResource LoadfileContentIn}"/>
				</i:EventTrigger>
			</i:Interaction.Triggers>
		</Button>
        <Button x:Name="SavefileButton" Content="{Binding Source={StaticResource DataContents}, Path=ApplicationStrings.SavefileButtonContent}" HorizontalAlignment="Right" Height="53" Margin="0,83,20,0" VerticalAlignment="Top" Width="70" BorderThickness="1" BorderBrush="{x:Null}" Style="{DynamicResource RecordButtonStyle}" FontFamily="迷你简小标宋" Click="SavefileButton_Click">
			<Button.Background>
				<ImageBrush ImageSource="/Miku.Client;component/Dictionarys/Images/Box_Red.png" TileMode="Tile"/>
			</Button.Background>
			<i:Interaction.Triggers>
				<i:EventTrigger EventName="MouseLeave">
					<ei:ControlStoryboardAction Storyboard="{StaticResource SavefileContentOut}"/>
				</i:EventTrigger>
				<i:EventTrigger EventName="MouseEnter">
					<ei:ControlStoryboardAction Storyboard="{StaticResource SavefileContentIn}"/>
				</i:EventTrigger>
			</i:Interaction.Triggers>
		</Button>
		<Miku_Client:RecordContent x:Name="recordContent" Margin="20,137,138,30"/>
		<Miku_Client:PlaybackContent x:Name="playbackContent" Margin="112,137,46,30"/>
		<Miku_Client:LoadfileContent x:Name="loadfileContent" Margin="49,137,109,30"/>
		<Miku_Client:SavefileContent x:Name="savefileContent" Margin="143,137,15,30"/>
        <Button x:Name="BackHome"  Height="45" HorizontalAlignment="Left" Margin="18.039,6.402,0,0" VerticalAlignment="Top" Width="45" Style="{DynamicResource BackButtonStyle}" RenderTransformOrigin="0.5,0.5" Click="BackHome_Click" ToolTip="{Binding Source={StaticResource DataContents}, Path=ApplicationStrings.ReturnHomeTipText}">
        	<Button.RenderTransform>
        		<TransformGroup>
        			<ScaleTransform ScaleX="-1"/>
        			<SkewTransform/>
        			<RotateTransform Angle="360.778"/>
        			<TranslateTransform/>
        		</TransformGroup>
        	</Button.RenderTransform>
        </Button>
    </Grid> 
</StackPanel>
